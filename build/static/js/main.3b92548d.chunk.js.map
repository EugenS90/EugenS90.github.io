{"version":3,"sources":["bookmarks/logo.svg","bookmarks/Bookmarks.js","comments/Comments.js","recomended/Recomended.js","responces/Responce.js","views/Views.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Bookmarks","props","state","className","src","logo","onClick","this","ignore","React","Component","Comments","trigger","Recomended","Responce","companyFirst","companySecond","companyThird","send","Views","getMonth","event","database","target","value","i","push","x","y","Math","floor","random","setState","data","getWeek","getYear","format","onChange","height","width","animation","stroke","strokeWidth","App","par","bookmarks","comments","recomended","responce","views","Object","keys","map","elem","href","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3b92548d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.304e5212.svg\";","import React from 'react';\nimport './Bookmarks.css';\nimport logo from './logo.svg'\n\nclass Bookmarks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n  render() {\n    return (\n      <div>\n        <h3>There are your bookmarks</h3>\n        <div className='all__cards'>\n          <div className='card'>\n            <h4>BazaIT</h4>\n            <img src={logo} />\n            <p>JS developer</p>\n            <button className='btn btn-warning' onClick={this.ignore}>Delete</button>\n          </div>\n          <div className='card'>\n            <h4>BazaIT</h4>\n            <img src={logo} />\n            <p>JS developer</p>\n            <button className='btn btn-warning' onClick={this.ignore}>Delete</button>\n          </div>\n          <div className='card'>\n            <h4>BazaIT</h4>\n            <img src={logo} />\n            <p>JS developer</p>\n            <button className='btn btn-warning' onClick={this.ignore}>Delete</button>\n          </div>\n          <div className='card'>\n            <h4>BazaIT</h4>\n            <img src={logo} />\n            <p>JS developer</p>\n            <button className='btn btn-warning' onClick={this.ignore}>Delete</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Bookmarks;\n","import React from 'react';\nimport './Comments.css';\n\nimport Collapsible from 'react-collapsible';\n\nclass Comments extends React.Component {\n\n  render() {\n\n    return (\n      <div>\n        <h3>There are comments about your CV</h3>\n        <Collapsible trigger=\"Показать сообщение от компании Siemens\">\n          <p>Добрый день! Мы рассмотрели Ваше резюме</p>\n          <p>Однако нам хотелось бы, что бы Вы также имели навыки работы с фреймворком Vue.js.\n  Предлагаем Вам подтянуть недостающие знания и отправить нам свое резюме снова </p>\n        </Collapsible>\n        <Collapsible trigger=\"Показать сообщение от компании Google\">\n          <p>Добрый день! Мы рассмотрели Ваше резюме</p>\n          <p>Однако нам хотелось бы, что бы Вы также имели навыки работы с фреймворком Vue.js.\n  Предлагаем Вам подтянуть недостающие знания и отправить нам свое резюме снова </p>\n        </Collapsible>\n        <Collapsible trigger=\"Показать сообщение от компании BazaIT\">\n          <p>Добрый день! Мы рассмотрели Ваше резюме</p>\n          <p>Однако нам хотелось бы, что бы Вы также имели навыки работы с фреймворком Vue.js.\n  Предлагаем Вам подтянуть недостающие знания и отправить нам свое резюме снова </p>\n        </Collapsible>\n      </div>\n    );\n  }\n}\n\nexport default Comments;\n","import React from 'react';\nimport './Recomended.css';\n\nimport Collapsible from 'react-collapsible';\n\nclass Recomended extends React.Component {\n  render() {\n    return (\n      <div>\n        <h3>There are recommendations for you!!!</h3>\n        <Collapsible trigger=\"Front-end developer в BazaIT\">\n          <p>Добрый день! Мы ищем разработчика на позицию Front-end</p>\n\n          <button className='btn btn-warning' >Respond</button>\n        </Collapsible>\n        <Collapsible trigger=\"JS developer в Google\">\n          <p>Добрый день! Мы ищем JavaScript разработчика со знанием принципов ООП</p>\n          <button className='btn btn-warning'>Respond</button>\n        </Collapsible>\n        <Collapsible trigger=\"Верстальщик в молодую компанию\">\n          <p>Добрый день! Молодая компания с большим потенциалом примет в коллектив HTML/CSS верстальщика. Опыт работы от 1 года - обязателен</p>\n          <button className='btn btn-warning'>Respond</button>\n        </Collapsible>\n      </div>\n    );\n  }\n}\n\nexport default Recomended;\n","import React from 'react';\nimport './Responce.css';\n\nclass Responce extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      companyFirst: 'Siemens',\n      companySecond: 'Google',\n      companyThird: 'BazaIT',\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n        <h3>There are responses to your СV</h3>\n        <div className=\"company\">\n          <h4>{this.state.companyFirst}</h4> <button className='btn btn-warning' onClick={this.ignore}>Ignored</button> <button className='btn btn-warning' onClick={this.send}>Send Massage</button>\n        </div>\n        <div className=\"company\">\n          <h4>{this.state.companySecond}</h4> <button className='btn btn-warning' onClick={this.ignore}>Ignored</button> <button className='btn btn-warning' onClick={this.send}>Send Massage</button>\n        </div>\n        <div className=\"company\">\n          <h4>{this.state.companyThird}</h4> <button className='btn btn-warning' onClick={this.ignore}>Ignored</button> <button className='btn btn-warning' onClick={this.send}>Send Massage</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Responce;\n","import React from 'react';\nimport './Views.css';\n\nimport '../../node_modules/react-vis/dist/style.css';\nimport { XYPlot, XAxis, YAxis, LineSeries, } from 'react-vis';\n\nclass Views extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      format: []\n    }\n  }\n  getMonth = (event) => {\n    let database = [];\n    if (event.target.value === '1') {\n      for (let i = 1; i <= 31; i++) {\n        database.push({ x: i, y: Math.floor(Math.random() * (200 - 0)) + 0 });\n      }\n      this.setState({ data: database })\n    } else if (event.target.value === '2') {\n      for (let i = 1; i <= 28; i++) {\n        database.push({ x: i, y: Math.floor(Math.random() * (200 - 0)) + 0 });\n      }\n      this.setState({ data: database })\n    } else if (event.target.value === '3')\n      for (let i = 1; i <= 30; i++) {\n        database.push({ x: i, y: Math.floor(Math.random() * (200 - 0)) + 0 });\n      }\n    this.setState({ data: database })\n  }\n\n  getWeek = () => {\n    let database = [];\n    for (let i = 1; i <= 7; i++) {\n      database.push({ x: i, y: Math.floor(Math.random() * (200 - 0)) + 0 });\n    }\n    this.setState({ data: database });\n  }\n\n  getYear = () => {\n    let database = [];\n    for (let i = 1; i <= 12; i++) {\n      database.push({ x: i, y: Math.floor(Math.random() * (200 - 0)) + 0 });\n    }\n    this.setState({ data: database })\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <h3>Choose a period</h3>\n\n        <button className=\"btn btn-warning\" onClick={this.getWeek}>Week</button>\n\n        <select className=\"btn btn-secondary\" onChange={this.getMonth}>\n          <option >Choose a month</option>\n          <option value='1'>January</option>\n          <option value='2'>Febrary</option>\n          <option value='1'>March</option>\n          <option value='3'>April</option>\n          <option value='1'>May</option>\n          <option value='3'>June</option>\n          <option value='1'>July</option>\n          <option value='1'>August</option>\n          <option value='3'>September</option>\n          <option value='1'>October</option>\n          <option value='3'>November</option>\n          <option value='1'>December</option>\n        </select>\n\n        <button className=\"btn btn-warning\" onClick={this.getYear}>Last Year</button>\n        <XYPlot height={600} width={600}>\n          <LineSeries\n            animation\n            stroke={'#FDD835'}\n            strokeWidth={3}\n\n            data={this.state.data} />\n          <XAxis />\n          <YAxis />\n        </XYPlot>\n      </div>\n    );\n  }\n}\n\n\nexport default Views;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Bookmarks from './bookmarks/Bookmarks';\nimport Comments from './comments/Comments';\nimport Recomended from './recomended/Recomended';\nimport Responce from './responces/Responce';\nimport Views from './views/Views';\n\nclass App extends React.Component {\n  render() {\n    let par = {\n      bookmarks: 'Bookmarks',\n      comments: 'Comments',\n      recomended: 'Recomended',\n      responce: 'Responce',\n      views: 'Views'\n    }\n    return (\n      <Router>\n        <div className=\"container\">\n          <h1>Analitics</h1>\n          <hr />\n          <div className='d-flex justify-content-beetwen'>\n            <nav>\n              <ul>{Object.keys(par).map(elem => <li> <a href={elem}>{par[elem]} </a></li>)}</ul>\n            </nav>\n            <Switch>\n              <Route exact path='/bookmarks' component={Bookmarks} />\n              <Route exact path='/comments' component={Comments} />\n              <Route exact path='/recomended' component={Recomended} />\n              <Route exact path='/responce' component={Responce} />\n              <Route exact path='/views' component={Views} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}